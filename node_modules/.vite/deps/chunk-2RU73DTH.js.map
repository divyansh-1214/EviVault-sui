{
  "version": 3,
  "sources": ["../../@wallet-standard/app/src/wallets.ts", "../../@wallet-standard/wallet/src/util.ts", "../../@wallet-standard/features/src/connect.ts", "../../@wallet-standard/features/src/events.ts", "../../@scure/base/index.ts", "../../@noble/hashes/src/sha2.ts", "../../@noble/hashes/src/hmac.ts", "../../@noble/hashes/src/pbkdf2.ts", "../../@scure/bip39/esm/index.js", "../../@noble/hashes/src/sha512.ts"],
  "sourcesContent": ["import type {\r\n    DEPRECATED_WalletsCallback,\r\n    DEPRECATED_WalletsWindow,\r\n    Wallet,\r\n    WalletEventsWindow,\r\n    WindowAppReadyEvent,\r\n    WindowAppReadyEventAPI,\r\n} from '@wallet-standard/base';\r\n\r\nlet wallets: Wallets | undefined = undefined;\r\nconst registeredWalletsSet = new Set<Wallet>();\r\nfunction addRegisteredWallet(wallet: Wallet) {\r\n    cachedWalletsArray = undefined;\r\n    registeredWalletsSet.add(wallet);\r\n}\r\nfunction removeRegisteredWallet(wallet: Wallet) {\r\n    cachedWalletsArray = undefined;\r\n    registeredWalletsSet.delete(wallet);\r\n}\r\nconst listeners: { [E in WalletsEventNames]?: WalletsEventsListeners[E][] } = {};\r\n\r\n/**\r\n * Get an API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\r\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\r\n *\r\n * When called for the first time --\r\n *\r\n * This dispatches a {@link \"@wallet-standard/base\".WindowAppReadyEvent} to notify each Wallet that the app is ready\r\n * to register it.\r\n *\r\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to listen for a notification\r\n * from each Wallet that the Wallet is ready to be registered by the app.\r\n *\r\n * This combination of event dispatch and listener guarantees that each Wallet will be registered synchronously as soon\r\n * as the app is ready whether the app loads before or after each Wallet.\r\n *\r\n * @return API for getting, listening for, and registering Wallets.\r\n *\r\n * @group App\r\n */\r\nexport function getWallets(): Wallets {\r\n    if (wallets) return wallets;\r\n    wallets = Object.freeze({ register, get, on });\r\n    if (typeof window === 'undefined') return wallets;\r\n\r\n    const api = Object.freeze({ register });\r\n    try {\r\n        (window as WalletEventsWindow).addEventListener('wallet-standard:register-wallet', ({ detail: callback }) =>\r\n            callback(api)\r\n        );\r\n    } catch (error) {\r\n        console.error('wallet-standard:register-wallet event listener could not be added\\n', error);\r\n    }\r\n    try {\r\n        (window as WalletEventsWindow).dispatchEvent(new AppReadyEvent(api));\r\n    } catch (error) {\r\n        console.error('wallet-standard:app-ready event could not be dispatched\\n', error);\r\n    }\r\n\r\n    return wallets;\r\n}\r\n\r\n/**\r\n * API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\r\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\r\n *\r\n * @group App\r\n */\r\nexport interface Wallets {\r\n    /**\r\n     * Get all Wallets that have been registered.\r\n     *\r\n     * @return Registered Wallets.\r\n     */\r\n    get(): readonly Wallet[];\r\n\r\n    /**\r\n     * Add an event listener and subscribe to events for Wallets that are\r\n     * {@link WalletsEventsListeners.register | registered} and\r\n     * {@link WalletsEventsListeners.unregister | unregistered}.\r\n     *\r\n     * @param event    Event type to listen for. {@link WalletsEventsListeners.register | `register`} and\r\n     * {@link WalletsEventsListeners.unregister | `unregister`} are the only event types.\r\n     * @param listener Function that will be called when an event of the type is emitted.\r\n     *\r\n     * @return\r\n     * `off` function which may be called to remove the event listener and unsubscribe from events.\r\n     *\r\n     * As with all event listeners, be careful to avoid memory leaks.\r\n     */\r\n    on<E extends WalletsEventNames>(event: E, listener: WalletsEventsListeners[E]): () => void;\r\n\r\n    /**\r\n     * Register Wallets. This can be used to programmatically wrap non-standard wallets as Standard Wallets.\r\n     *\r\n     * Apps generally do not need to, and should not, call this.\r\n     *\r\n     * @param wallets Wallets to register.\r\n     *\r\n     * @return\r\n     * `unregister` function which may be called to programmatically unregister the registered Wallets.\r\n     *\r\n     * Apps generally do not need to, and should not, call this.\r\n     */\r\n    register(...wallets: Wallet[]): () => void;\r\n}\r\n\r\n/**\r\n * Types of event listeners of the {@link Wallets} API.\r\n *\r\n * @group App\r\n */\r\nexport interface WalletsEventsListeners {\r\n    /**\r\n     * Emitted when Wallets are registered.\r\n     *\r\n     * @param wallets Wallets that were registered.\r\n     */\r\n    register(...wallets: Wallet[]): void;\r\n\r\n    /**\r\n     * Emitted when Wallets are unregistered.\r\n     *\r\n     * @param wallets Wallets that were unregistered.\r\n     */\r\n    unregister(...wallets: Wallet[]): void;\r\n}\r\n\r\n/**\r\n * Names of {@link WalletsEventsListeners} that can be listened for.\r\n *\r\n * @group App\r\n */\r\nexport type WalletsEventNames = keyof WalletsEventsListeners;\r\n\r\n/**\r\n * @deprecated Use {@link WalletsEventsListeners} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type WalletsEvents = WalletsEventsListeners;\r\n\r\nfunction register(...wallets: Wallet[]): () => void {\r\n    // Filter out wallets that have already been registered.\r\n    // This prevents the same wallet from being registered twice, but it also prevents wallets from being\r\n    // unregistered by reusing a reference to the wallet to obtain the unregister function for it.\r\n    wallets = wallets.filter((wallet) => !registeredWalletsSet.has(wallet));\r\n    // If there are no new wallets to register, just return a no-op unregister function.\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    if (!wallets.length) return () => {};\r\n\r\n    wallets.forEach((wallet) => addRegisteredWallet(wallet));\r\n    listeners['register']?.forEach((listener) => guard(() => listener(...wallets)));\r\n    // Return a function that unregisters the registered wallets.\r\n    return function unregister(): void {\r\n        wallets.forEach((wallet) => removeRegisteredWallet(wallet));\r\n        listeners['unregister']?.forEach((listener) => guard(() => listener(...wallets)));\r\n    };\r\n}\r\n\r\nlet cachedWalletsArray: readonly Wallet[] | undefined;\r\nfunction get(): readonly Wallet[] {\r\n    if (!cachedWalletsArray) {\r\n        cachedWalletsArray = [...registeredWalletsSet];\r\n    }\r\n    return cachedWalletsArray;\r\n}\r\n\r\nfunction on<E extends WalletsEventNames>(event: E, listener: WalletsEventsListeners[E]): () => void {\r\n    listeners[event]?.push(listener) || (listeners[event] = [listener]);\r\n    // Return a function that removes the event listener.\r\n    return function off(): void {\r\n        listeners[event] = listeners[event]?.filter((existingListener) => listener !== existingListener);\r\n    };\r\n}\r\n\r\nfunction guard(callback: () => void) {\r\n    try {\r\n        callback();\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nclass AppReadyEvent extends Event implements WindowAppReadyEvent {\r\n    readonly #detail: WindowAppReadyEventAPI;\r\n\r\n    get detail() {\r\n        return this.#detail;\r\n    }\r\n\r\n    get type() {\r\n        return 'wallet-standard:app-ready' as const;\r\n    }\r\n\r\n    constructor(api: WindowAppReadyEventAPI) {\r\n        super('wallet-standard:app-ready', {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            composed: false,\r\n        });\r\n        this.#detail = api;\r\n    }\r\n\r\n    /** @deprecated */\r\n    preventDefault(): never {\r\n        throw new Error('preventDefault cannot be called');\r\n    }\r\n\r\n    /** @deprecated */\r\n    stopImmediatePropagation(): never {\r\n        throw new Error('stopImmediatePropagation cannot be called');\r\n    }\r\n\r\n    /** @deprecated */\r\n    stopPropagation(): never {\r\n        throw new Error('stopPropagation cannot be called');\r\n    }\r\n}\r\n\r\n/**\r\n * @deprecated Use {@link getWallets} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport function DEPRECATED_getWallets(): Wallets {\r\n    if (wallets) return wallets;\r\n    wallets = getWallets();\r\n    if (typeof window === 'undefined') return wallets;\r\n\r\n    const callbacks = (window as DEPRECATED_WalletsWindow).navigator.wallets || [];\r\n    if (!Array.isArray(callbacks)) {\r\n        console.error('window.navigator.wallets is not an array');\r\n        return wallets;\r\n    }\r\n\r\n    const { register } = wallets;\r\n    const push = (...callbacks: DEPRECATED_WalletsCallback[]): void =>\r\n        callbacks.forEach((callback) => guard(() => callback({ register })));\r\n    try {\r\n        Object.defineProperty((window as DEPRECATED_WalletsWindow).navigator, 'wallets', {\r\n            value: Object.freeze({ push }),\r\n        });\r\n    } catch (error) {\r\n        console.error('window.navigator.wallets could not be set');\r\n        return wallets;\r\n    }\r\n\r\n    push(...callbacks);\r\n    return wallets;\r\n}\r\n", "import type { ReadonlyUint8Array, WalletAccount } from '@wallet-standard/base';\r\n\r\n/**\r\n * Base implementation of a {@link \"@wallet-standard/base\".WalletAccount} to be used or extended by a\r\n * {@link \"@wallet-standard/base\".Wallet}.\r\n *\r\n * `WalletAccount` properties must be read-only. This class enforces this by making all properties\r\n * [truly private](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields) and\r\n * read-only, using getters for access, returning copies instead of references, and calling\r\n * [Object.freeze](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze)\r\n * on the instance.\r\n *\r\n * @group Account\r\n */\r\nexport class ReadonlyWalletAccount implements WalletAccount {\r\n    readonly #address: WalletAccount['address'];\r\n    readonly #publicKey: WalletAccount['publicKey'];\r\n    readonly #chains: WalletAccount['chains'];\r\n    readonly #features: WalletAccount['features'];\r\n    readonly #label: WalletAccount['label'];\r\n    readonly #icon: WalletAccount['icon'];\r\n\r\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.address | WalletAccount::address} */\r\n    get address() {\r\n        return this.#address;\r\n    }\r\n\r\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.publicKey | WalletAccount::publicKey} */\r\n    get publicKey() {\r\n        return this.#publicKey.slice();\r\n    }\r\n\r\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.chains | WalletAccount::chains} */\r\n    get chains() {\r\n        return this.#chains.slice();\r\n    }\r\n\r\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.features | WalletAccount::features} */\r\n    get features() {\r\n        return this.#features.slice();\r\n    }\r\n\r\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.label | WalletAccount::label} */\r\n    get label() {\r\n        return this.#label;\r\n    }\r\n\r\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.icon | WalletAccount::icon} */\r\n    get icon() {\r\n        return this.#icon;\r\n    }\r\n\r\n    /**\r\n     * Create and freeze a read-only account.\r\n     *\r\n     * @param account Account to copy properties from.\r\n     */\r\n    constructor(account: WalletAccount) {\r\n        if (new.target === ReadonlyWalletAccount) {\r\n            Object.freeze(this);\r\n        }\r\n\r\n        this.#address = account.address;\r\n        this.#publicKey = account.publicKey.slice();\r\n        this.#chains = account.chains.slice();\r\n        this.#features = account.features.slice();\r\n        this.#label = account.label;\r\n        this.#icon = account.icon;\r\n    }\r\n}\r\n\r\n/**\r\n * Efficiently compare {@link Indexed} arrays (e.g. `Array` and `Uint8Array`).\r\n *\r\n * @param a An array.\r\n * @param b Another array.\r\n *\r\n * @return `true` if the arrays have the same length and elements, `false` otherwise.\r\n *\r\n * @group Util\r\n */\r\nexport function arraysEqual<T>(a: Indexed<T>, b: Indexed<T>): boolean {\r\n    if (a === b) return true;\r\n\r\n    const length = a.length;\r\n    if (length !== b.length) return false;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        if (a[i] !== b[i]) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Efficiently compare byte arrays, using {@link arraysEqual}.\r\n *\r\n * @param a A byte array.\r\n * @param b Another byte array.\r\n *\r\n * @return `true` if the byte arrays have the same length and bytes, `false` otherwise.\r\n *\r\n * @group Util\r\n */\r\nexport function bytesEqual(a: ReadonlyUint8Array, b: ReadonlyUint8Array): boolean {\r\n    return arraysEqual(a, b);\r\n}\r\n\r\n/**\r\n * Efficiently concatenate byte arrays without modifying them.\r\n *\r\n * @param first  A byte array.\r\n * @param others Additional byte arrays.\r\n *\r\n * @return New byte array containing the concatenation of all the byte arrays.\r\n *\r\n * @group Util\r\n */\r\nexport function concatBytes(first: ReadonlyUint8Array, ...others: ReadonlyUint8Array[]): Uint8Array {\r\n    const length = others.reduce((length, bytes) => length + bytes.length, first.length);\r\n    const bytes = new Uint8Array(length);\r\n\r\n    bytes.set(first, 0);\r\n    for (const other of others) {\r\n        bytes.set(other, bytes.length);\r\n    }\r\n\r\n    return bytes;\r\n}\r\n\r\n/**\r\n * Create a new object with a subset of fields from a source object.\r\n *\r\n * @param source Object to pick fields from.\r\n * @param keys   Names of fields to pick.\r\n *\r\n * @return New object with only the picked fields.\r\n *\r\n * @group Util\r\n */\r\nexport function pick<T, K extends keyof T>(source: T, ...keys: K[]): Pick<T, K> {\r\n    const picked = {} as Pick<T, K>;\r\n    for (const key of keys) {\r\n        picked[key] = source[key];\r\n    }\r\n    return picked;\r\n}\r\n\r\n/**\r\n * Call a callback function, catch an error if it throws, and log the error without rethrowing.\r\n *\r\n * @param callback Function to call.\r\n *\r\n * @group Util\r\n */\r\nexport function guard(callback: () => void) {\r\n    try {\r\n        callback();\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n/**\r\n * @internal\r\n *\r\n * Type with a numeric `length` and numerically indexed elements of a generic type `T`.\r\n *\r\n * For example, `Array<T>` and `Uint8Array`.\r\n *\r\n * @group Internal\r\n */\r\nexport interface Indexed<T> {\r\n    length: number;\r\n    [index: number]: T;\r\n}\r\n", "import type { WalletAccount } from '@wallet-standard/base';\r\n\r\n/** Name of the feature. */\r\nexport const StandardConnect = 'standard:connect';\r\n/**\r\n * @deprecated Use {@link StandardConnect} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport const Connect = StandardConnect;\r\n\r\n/**\r\n * `standard:connect` is a {@link \"@wallet-standard/base\".Wallet.features | feature} that may be implemented by a\r\n * {@link \"@wallet-standard/base\".Wallet} to allow the app to obtain authorization to use\r\n * {@link \"@wallet-standard/base\".Wallet.accounts}.\r\n *\r\n * @group Connect\r\n */\r\nexport type StandardConnectFeature = {\r\n    /** Name of the feature. */\r\n    readonly [StandardConnect]: {\r\n        /** Version of the feature implemented by the Wallet. */\r\n        readonly version: StandardConnectVersion;\r\n        /** Method to call to use the feature. */\r\n        readonly connect: StandardConnectMethod;\r\n    };\r\n};\r\n/**\r\n * @deprecated Use {@link StandardConnectFeature} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type ConnectFeature = StandardConnectFeature;\r\n\r\n/**\r\n * Version of the {@link StandardConnectFeature} implemented by a {@link \"@wallet-standard/base\".Wallet}.\r\n *\r\n * @group Connect\r\n */\r\nexport type StandardConnectVersion = '1.0.0';\r\n/**\r\n * @deprecated Use {@link StandardConnectVersion} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type ConnectVersion = StandardConnectVersion;\r\n\r\n/**\r\n * Method to call to use the {@link StandardConnectFeature}.\r\n *\r\n * @group Connect\r\n */\r\nexport type StandardConnectMethod = (input?: StandardConnectInput) => Promise<StandardConnectOutput>;\r\n/**\r\n * @deprecated Use {@link StandardConnectMethod} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type ConnectMethod = StandardConnectMethod;\r\n\r\n/**\r\n * Input for the {@link StandardConnectMethod}.\r\n *\r\n * @group Connect\r\n */\r\nexport interface StandardConnectInput {\r\n    /**\r\n     * By default, using the {@link StandardConnectFeature} should prompt the user to request authorization to accounts.\r\n     * Set the `silent` flag to `true` to request accounts that have already been authorized without prompting.\r\n     *\r\n     * This flag may or may not be used by the Wallet and the app should not depend on it being used.\r\n     * If this flag is used by the Wallet, the Wallet should not prompt the user, and should return only the accounts\r\n     * that the app is authorized to use.\r\n     */\r\n    readonly silent?: boolean;\r\n}\r\n/**\r\n * @deprecated Use {@link StandardConnectInput} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type ConnectInput = StandardConnectInput;\r\n\r\n/**\r\n * Output of the {@link StandardConnectMethod}.\r\n *\r\n * @group Connect\r\n */\r\nexport interface StandardConnectOutput {\r\n    /** List of accounts in the {@link \"@wallet-standard/base\".Wallet} that the app has been authorized to use. */\r\n    readonly accounts: readonly WalletAccount[];\r\n}\r\n/**\r\n * @deprecated Use {@link StandardConnectOutput} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type ConnectOutput = StandardConnectOutput;\r\n", "import type { Wallet } from '@wallet-standard/base';\r\n\r\n/** Name of the feature. */\r\nexport const StandardEvents = 'standard:events';\r\n/**\r\n * @deprecated Use {@link StandardEvents} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport const Events = StandardEvents;\r\n\r\n/**\r\n * `standard:events` is a {@link \"@wallet-standard/base\".Wallet.features | feature} that may be implemented by a\r\n * {@link \"@wallet-standard/base\".Wallet} to allow the app to add an event listener and subscribe to events emitted by\r\n * the Wallet when properties of the Wallet {@link StandardEventsListeners.change}.\r\n *\r\n * @group Events\r\n */\r\nexport type StandardEventsFeature = {\r\n    /** Name of the feature. */\r\n    readonly [StandardEvents]: {\r\n        /** Version of the feature implemented by the {@link \"@wallet-standard/base\".Wallet}. */\r\n        readonly version: StandardEventsVersion;\r\n        /** Method to call to use the feature. */\r\n        readonly on: StandardEventsOnMethod;\r\n    };\r\n};\r\n/**\r\n * @deprecated Use {@link StandardEventsFeature} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type EventsFeature = StandardEventsFeature;\r\n\r\n/**\r\n * Version of the {@link StandardEventsFeature} implemented by a {@link \"@wallet-standard/base\".Wallet}.\r\n *\r\n * @group Events\r\n */\r\nexport type StandardEventsVersion = '1.0.0';\r\n/**\r\n * @deprecated Use {@link StandardEventsVersion} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type EventsVersion = StandardEventsVersion;\r\n\r\n/**\r\n * Method to call to use the {@link StandardEventsFeature}.\r\n *\r\n * @param event    Event type to listen for. {@link StandardEventsListeners.change | `change`} is the only event type.\r\n * @param listener Function that will be called when an event of the type is emitted.\r\n *\r\n * @return\r\n * `off` function which may be called to remove the event listener and unsubscribe from events.\r\n *\r\n * As with all event listeners, be careful to avoid memory leaks.\r\n *\r\n * @group Events\r\n */\r\nexport type StandardEventsOnMethod = <E extends StandardEventsNames>(\r\n    event: E,\r\n    listener: StandardEventsListeners[E]\r\n) => () => void;\r\n/**\r\n * @deprecated Use {@link StandardEventsOnMethod} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type EventsOnMethod = StandardEventsOnMethod;\r\n\r\n/**\r\n * Types of event listeners of the {@link StandardEventsFeature}.\r\n *\r\n * @group Events\r\n */\r\nexport interface StandardEventsListeners {\r\n    /**\r\n     * Listener that will be called when {@link StandardEventsChangeProperties | properties} of the\r\n     * {@link \"@wallet-standard/base\".Wallet} have changed.\r\n     *\r\n     * @param properties Properties that changed with their **new** values.\r\n     */\r\n    change(properties: StandardEventsChangeProperties): void;\r\n}\r\n/**\r\n * @deprecated Use {@link StandardEventsListeners} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type EventsListeners = StandardEventsListeners;\r\n\r\n/**\r\n * Names of {@link StandardEventsListeners} that can be listened for.\r\n *\r\n * @group Events\r\n */\r\nexport type StandardEventsNames = keyof StandardEventsListeners;\r\n/**\r\n * @deprecated Use {@link StandardEventsNames} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type EventsNames = StandardEventsNames;\r\n\r\n/**\r\n * Properties of a {@link \"@wallet-standard/base\".Wallet} that {@link StandardEventsListeners.change | changed} with their\r\n * **new** values.\r\n *\r\n * @group Events\r\n */\r\nexport interface StandardEventsChangeProperties {\r\n    /**\r\n     * {@link \"@wallet-standard/base\".Wallet.chains | Chains} supported by the Wallet.\r\n     *\r\n     * The Wallet should only define this field if the value of the property has changed.\r\n     *\r\n     * The value must be the **new** value of the property.\r\n     */\r\n    readonly chains?: Wallet['chains'];\r\n    /**\r\n     * {@link \"@wallet-standard/base\".Wallet.features | Features} supported by the Wallet.\r\n     *\r\n     * The Wallet should only define this field if the value of the property has changed.\r\n     *\r\n     * The value must be the **new** value of the property.\r\n     */\r\n    readonly features?: Wallet['features'];\r\n    /**\r\n     * {@link \"@wallet-standard/base\".Wallet.accounts | Accounts} that the app is authorized to use.\r\n     *\r\n     * The Wallet should only define this field if the value of the property has changed.\r\n     *\r\n     * The value must be the **new** value of the property.\r\n     */\r\n    readonly accounts?: Wallet['accounts'];\r\n}\r\n/**\r\n * @deprecated Use {@link StandardEventsChangeProperties} instead.\r\n *\r\n * @group Deprecated\r\n */\r\nexport type EventsChangeProperties = StandardEventsChangeProperties;\r\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\r\n\r\nexport interface Coder<F, T> {\r\n  encode(from: F): T;\r\n  decode(to: T): F;\r\n}\r\n\r\nexport interface BytesCoder extends Coder<Uint8Array, string> {\r\n  encode: (data: Uint8Array) => string;\r\n  decode: (str: string) => Uint8Array;\r\n}\r\n\r\nfunction isBytes(a: unknown): a is Uint8Array {\r\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\r\n}\r\n/** Asserts something is Uint8Array. */\r\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\r\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\r\n  if (lengths.length > 0 && !lengths.includes(b.length))\r\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\r\n}\r\n\r\nfunction isArrayOf(isString: boolean, arr: any[]) {\r\n  if (!Array.isArray(arr)) return false;\r\n  if (arr.length === 0) return true;\r\n  if (isString) {\r\n    return arr.every((item) => typeof item === 'string');\r\n  } else {\r\n    return arr.every((item) => Number.isSafeInteger(item));\r\n  }\r\n}\r\n\r\n// no abytes: seems to have 10% slowdown. Why?!\r\n\r\nfunction afn(input: Function): input is Function {\r\n  if (typeof input !== 'function') throw new Error('function expected');\r\n  return true;\r\n}\r\n\r\nfunction astr(label: string, input: unknown): input is string {\r\n  if (typeof input !== 'string') throw new Error(`${label}: string expected`);\r\n  return true;\r\n}\r\n\r\nfunction anumber(n: number): void {\r\n  if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);\r\n}\r\n\r\nfunction aArr(input: any[]) {\r\n  if (!Array.isArray(input)) throw new Error('array expected');\r\n}\r\nfunction astrArr(label: string, input: string[]) {\r\n  if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);\r\n}\r\nfunction anumArr(label: string, input: number[]) {\r\n  if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);\r\n}\r\n\r\n// TODO: some recusive type inference so it would check correct order of input/output inside rest?\r\n// like <string, number>, <number, bytes>, <bytes, float>\r\ntype Chain = [Coder<any, any>, ...Coder<any, any>[]];\r\n// Extract info from Coder type\r\ntype Input<F> = F extends Coder<infer T, any> ? T : never;\r\ntype Output<F> = F extends Coder<any, infer T> ? T : never;\r\n// Generic function for arrays\r\ntype First<T> = T extends [infer U, ...any[]] ? U : never;\r\ntype Last<T> = T extends [...any[], infer U] ? U : never;\r\ntype Tail<T> = T extends [any, ...infer U] ? U : never;\r\n\r\ntype AsChain<C extends Chain, Rest = Tail<C>> = {\r\n  // C[K] = Coder<Input<C[K]>, Input<Rest[k]>>\r\n  [K in keyof C]: Coder<Input<C[K]>, Input<K extends keyof Rest ? Rest[K] : any>>;\r\n};\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction chain<T extends Chain & AsChain<T>>(...args: T): Coder<Input<First<T>>, Output<Last<T>>> {\r\n  const id = (a: any) => a;\r\n  // Wrap call in closure so JIT can inline calls\r\n  const wrap = (a: any, b: any) => (c: any) => a(b(c));\r\n  // Construct chain of args[-1].encode(args[-2].encode([...]))\r\n  const encode = args.map((x) => x.encode).reduceRight(wrap, id);\r\n  // Construct chain of args[0].decode(args[1].decode(...))\r\n  const decode = args.map((x) => x.decode).reduce(wrap, id);\r\n  return { encode, decode };\r\n}\r\n\r\n/**\r\n * Encodes integer radix representation to array of strings using alphabet and back.\r\n * Could also be array of strings.\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction alphabet(letters: string | string[]): Coder<number[], string[]> {\r\n  // mapping 1 to \"b\"\r\n  const lettersA = typeof letters === 'string' ? letters.split('') : letters;\r\n  const len = lettersA.length;\r\n  astrArr('alphabet', lettersA);\r\n\r\n  // mapping \"b\" to 1\r\n  const indexes = new Map(lettersA.map((l, i) => [l, i]));\r\n  return {\r\n    encode: (digits: number[]) => {\r\n      aArr(digits);\r\n      return digits.map((i) => {\r\n        if (!Number.isSafeInteger(i) || i < 0 || i >= len)\r\n          throw new Error(\r\n            `alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`\r\n          );\r\n        return lettersA[i]!;\r\n      });\r\n    },\r\n    decode: (input: string[]): number[] => {\r\n      aArr(input);\r\n      return input.map((letter) => {\r\n        astr('alphabet.decode', letter);\r\n        const i = indexes.get(letter);\r\n        if (i === undefined) throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\r\n        return i;\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction join(separator = ''): Coder<string[], string> {\r\n  astr('join', separator);\r\n  return {\r\n    encode: (from) => {\r\n      astrArr('join.decode', from);\r\n      return from.join(separator);\r\n    },\r\n    decode: (to) => {\r\n      astr('join.decode', to);\r\n      return to.split(separator);\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Pad strings array so it has integer number of bits\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction padding(bits: number, chr = '='): Coder<string[], string[]> {\r\n  anumber(bits);\r\n  astr('padding', chr);\r\n  return {\r\n    encode(data: string[]): string[] {\r\n      astrArr('padding.encode', data);\r\n      while ((data.length * bits) % 8) data.push(chr);\r\n      return data;\r\n    },\r\n    decode(input: string[]): string[] {\r\n      astrArr('padding.decode', input);\r\n      let end = input.length;\r\n      if ((end * bits) % 8)\r\n        throw new Error('padding: invalid, string should have whole number of bytes');\r\n      for (; end > 0 && input[end - 1] === chr; end--) {\r\n        const last = end - 1;\r\n        const byte = last * bits;\r\n        if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');\r\n      }\r\n      return input.slice(0, end);\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction normalize<T>(fn: (val: T) => T): Coder<T, T> {\r\n  afn(fn);\r\n  return { encode: (from: T) => from, decode: (to: T) => fn(to) };\r\n}\r\n\r\n/**\r\n * Slow: O(n^2) time complexity\r\n */\r\nfunction convertRadix(data: number[], from: number, to: number): number[] {\r\n  // base 1 is impossible\r\n  if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\r\n  if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\r\n  aArr(data);\r\n  if (!data.length) return [];\r\n  let pos = 0;\r\n  const res = [];\r\n  const digits = Array.from(data, (d) => {\r\n    anumber(d);\r\n    if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);\r\n    return d;\r\n  });\r\n  const dlen = digits.length;\r\n  while (true) {\r\n    let carry = 0;\r\n    let done = true;\r\n    for (let i = pos; i < dlen; i++) {\r\n      const digit = digits[i]!;\r\n      const fromCarry = from * carry;\r\n      const digitBase = fromCarry + digit;\r\n      if (\r\n        !Number.isSafeInteger(digitBase) ||\r\n        fromCarry / from !== carry ||\r\n        digitBase - digit !== fromCarry\r\n      ) {\r\n        throw new Error('convertRadix: carry overflow');\r\n      }\r\n      const div = digitBase / to;\r\n      carry = digitBase % to;\r\n      const rounded = Math.floor(div);\r\n      digits[i] = rounded;\r\n      if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\r\n        throw new Error('convertRadix: carry overflow');\r\n      if (!done) continue;\r\n      else if (!rounded) pos = i;\r\n      else done = false;\r\n    }\r\n    res.push(carry);\r\n    if (done) break;\r\n  }\r\n  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);\r\n  return res.reverse();\r\n}\r\n\r\nconst gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\r\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from: number, to: number) =>\r\n  from + (to - gcd(from, to));\r\nconst powers: number[] = /* @__PURE__ */ (() => {\r\n  let res = [];\r\n  for (let i = 0; i < 40; i++) res.push(2 ** i);\r\n  return res;\r\n})();\r\n/**\r\n * Implemented with numbers, because BigInt is 5x slower\r\n */\r\nfunction convertRadix2(data: number[], from: number, to: number, padding: boolean): number[] {\r\n  aArr(data);\r\n  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);\r\n  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);\r\n  if (radix2carry(from, to) > 32) {\r\n    throw new Error(\r\n      `convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`\r\n    );\r\n  }\r\n  let carry = 0;\r\n  let pos = 0; // bitwise position in current element\r\n  const max = powers[from]!;\r\n  const mask = powers[to]! - 1;\r\n  const res: number[] = [];\r\n  for (const n of data) {\r\n    anumber(n);\r\n    if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\r\n    carry = (carry << from) | n;\r\n    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\r\n    pos += from;\r\n    for (; pos >= to; pos -= to) res.push(((carry >> (pos - to)) & mask) >>> 0);\r\n    const pow = powers[pos];\r\n    if (pow === undefined) throw new Error('invalid carry');\r\n    carry &= pow - 1; // clean carry, otherwise it will cause overflow\r\n  }\r\n  carry = (carry << (to - pos)) & mask;\r\n  if (!padding && pos >= from) throw new Error('Excess padding');\r\n  if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);\r\n  if (padding && pos > 0) res.push(carry >>> 0);\r\n  return res;\r\n}\r\n\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction radix(num: number): Coder<Uint8Array, number[]> {\r\n  anumber(num);\r\n  const _256 = 2 ** 8;\r\n  return {\r\n    encode: (bytes: Uint8Array) => {\r\n      if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');\r\n      return convertRadix(Array.from(bytes), _256, num);\r\n    },\r\n    decode: (digits: number[]) => {\r\n      anumArr('radix.decode', digits);\r\n      return Uint8Array.from(convertRadix(digits, num, _256));\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * If both bases are power of same number (like `2**8 <-> 2**64`),\r\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction radix2(bits: number, revPadding = false): Coder<Uint8Array, number[]> {\r\n  anumber(bits);\r\n  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');\r\n  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\r\n    throw new Error('radix2: carry overflow');\r\n  return {\r\n    encode: (bytes: Uint8Array) => {\r\n      if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');\r\n      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\r\n    },\r\n    decode: (digits: number[]) => {\r\n      anumArr('radix2.decode', digits);\r\n      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\r\n    },\r\n  };\r\n}\r\n\r\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\r\nfunction unsafeWrapper<T extends (...args: any) => any>(fn: T) {\r\n  afn(fn);\r\n  return function (...args: ArgumentTypes<T>): ReturnType<T> | void {\r\n    try {\r\n      return fn.apply(null, args);\r\n    } catch (e) {}\r\n  };\r\n}\r\n\r\nfunction checksum(\r\n  len: number,\r\n  fn: (data: Uint8Array) => Uint8Array\r\n): Coder<Uint8Array, Uint8Array> {\r\n  anumber(len);\r\n  afn(fn);\r\n  return {\r\n    encode(data: Uint8Array) {\r\n      if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');\r\n      const sum = fn(data).slice(0, len);\r\n      const res = new Uint8Array(data.length + len);\r\n      res.set(data);\r\n      res.set(sum, data.length);\r\n      return res;\r\n    },\r\n    decode(data: Uint8Array) {\r\n      if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');\r\n      const payload = data.slice(0, -len);\r\n      const oldChecksum = data.slice(-len);\r\n      const newChecksum = fn(payload).slice(0, len);\r\n      for (let i = 0; i < len; i++)\r\n        if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');\r\n      return payload;\r\n    },\r\n  };\r\n}\r\n\r\n// prettier-ignore\r\nexport const utils: { alphabet: typeof alphabet; chain: typeof chain; checksum: typeof checksum; convertRadix: typeof convertRadix; convertRadix2: typeof convertRadix2; radix: typeof radix; radix2: typeof radix2; join: typeof join; padding: typeof padding; } = {\r\n  alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\r\n};\r\n\r\n// RFC 4648 aka RFC 3548\r\n// ---------------------\r\n\r\n/**\r\n * base16 encoding from RFC 4648.\r\n * @example\r\n * ```js\r\n * base16.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '12AB'\r\n * ```\r\n */\r\nexport const base16: BytesCoder = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\r\n\r\n/**\r\n * base32 encoding from RFC 4648. Has padding.\r\n * Use `base32nopad` for unpadded version.\r\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\r\n * @example\r\n * ```js\r\n * base32.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'CKVQ===='\r\n * base32.decode('CKVQ====');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\r\n  padding(5),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base32 encoding from RFC 4648. No padding.\r\n * Use `base32` for padded version.\r\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\r\n * @example\r\n * ```js\r\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'CKVQ'\r\n * base32nopad.decode('CKVQ');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32nopad: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\r\n  join('')\r\n);\r\n/**\r\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\r\n * Use `base32hexnopad` for unpadded version.\r\n * @example\r\n * ```js\r\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '2ALG===='\r\n * base32hex.decode('2ALG====');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32hex: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\r\n  padding(5),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\r\n * Use `base32hex` for padded version.\r\n * @example\r\n * ```js\r\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '2ALG'\r\n * base32hexnopad.decode('2ALG');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32hexnopad: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\r\n  join('')\r\n);\r\n/**\r\n * base32 encoding from RFC 4648. Doug Crockford's version.\r\n * https://www.crockford.com/base32.html\r\n * @example\r\n * ```js\r\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => '2ANG'\r\n * base32crockford.decode('2ANG');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base32crockford: BytesCoder = chain(\r\n  radix2(5),\r\n  alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),\r\n  join(''),\r\n  normalize((s: string) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))\r\n);\r\n\r\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\r\n// TODO: temporarily set to false, trying to understand bugs\r\n// prettier-ignore\r\nconst hasBase64Builtin: boolean = /* @__PURE__ */ (() =>\r\n  typeof (Uint8Array as any).from([]).toBase64 === 'function' &&\r\n  typeof (Uint8Array as any).fromBase64 === 'function')();\r\n\r\n/**\r\n * base64 from RFC 4648. Padded.\r\n * Use `base64nopad` for unpadded version.\r\n * Also check out `base64url`, `base64urlnopad`.\r\n * Falls back to built-in function, when available.\r\n * @example\r\n * ```js\r\n * base64.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs='\r\n * base64.decode('Eqs=');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\n// prettier-ignore\r\nexport const base64: BytesCoder = hasBase64Builtin ? {\r\n  encode(b) { abytes(b); return (b as any).toBase64(); },\r\n  decode(s) {\r\n    astr('base64', s); return (Uint8Array as any).fromBase64(s, { lastChunkHandling: 'strict' });\r\n  },\r\n} : chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\r\n  padding(6),\r\n  join('')\r\n);\r\n/**\r\n * base64 from RFC 4648. No padding.\r\n * Use `base64` for padded version.\r\n * @example\r\n * ```js\r\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs'\r\n * base64nopad.decode('Eqs');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base64nopad: BytesCoder = chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\r\n * Use `base64urlnopad` for unpadded version.\r\n * Falls back to built-in function, when available.\r\n * @example\r\n * ```js\r\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs='\r\n * base64url.decode('Eqs=');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\n// prettier-ignore\r\nexport const base64url: BytesCoder = hasBase64Builtin ? {\r\n  encode(b) { abytes(b); return (b as any).toBase64({ alphabet: 'base64url' }); },\r\n  decode(s) { astr('base64', s); return (Uint8Array as any).fromBase64(s, { alphabet: 'base64url' }); },\r\n} : chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\r\n  padding(6),\r\n  join('')\r\n);\r\n\r\n/**\r\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\r\n * Use `base64url` for padded version.\r\n * @example\r\n * ```js\r\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\r\n * // => 'Eqs'\r\n * base64urlnopad.decode('Eqs');\r\n * // => Uint8Array.from([0x12, 0xab])\r\n * ```\r\n */\r\nexport const base64urlnopad: BytesCoder = chain(\r\n  radix2(6),\r\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\r\n  join('')\r\n);\r\n\r\n// base58 code\r\n// -----------\r\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc: string) =>\r\n  chain(radix(58), alphabet(abc), join(''));\r\n\r\n/**\r\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\r\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\r\n * @example\r\n * ```js\r\n * base58.decode('01abcdef');\r\n * // => '3UhJW'\r\n * ```\r\n */\r\nexport const base58: BytesCoder = genBase58(\r\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\n);\r\n/**\r\n * base58: flickr version. Check out `base58`.\r\n */\r\nexport const base58flickr: BytesCoder = genBase58(\r\n  '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\r\n);\r\n/**\r\n * base58: XRP version. Check out `base58`.\r\n */\r\nexport const base58xrp: BytesCoder = genBase58(\r\n  'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\r\n);\r\n\r\n// Data len (index) -> encoded block len\r\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\r\n\r\n/**\r\n * base58: XMR version. Check out `base58`.\r\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\r\n * Block encoding significantly reduces quadratic complexity of base58.\r\n */\r\nexport const base58xmr: BytesCoder = {\r\n  encode(data: Uint8Array) {\r\n    let res = '';\r\n    for (let i = 0; i < data.length; i += 8) {\r\n      const block = data.subarray(i, i + 8);\r\n      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length]!, '1');\r\n    }\r\n    return res;\r\n  },\r\n  decode(str: string) {\r\n    let res: number[] = [];\r\n    for (let i = 0; i < str.length; i += 11) {\r\n      const slice = str.slice(i, i + 11);\r\n      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\r\n      const block = base58.decode(slice);\r\n      for (let j = 0; j < block.length - blockLen; j++) {\r\n        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');\r\n      }\r\n      res = res.concat(Array.from(block.slice(block.length - blockLen)));\r\n    }\r\n    return Uint8Array.from(res);\r\n  },\r\n};\r\n\r\n/**\r\n * Method, which creates base58check encoder.\r\n * Requires function, calculating sha256.\r\n */\r\nexport const createBase58check = (sha256: (data: Uint8Array) => Uint8Array): BytesCoder =>\r\n  chain(\r\n    checksum(4, (data) => sha256(sha256(data))),\r\n    base58\r\n  );\r\n\r\n/**\r\n * Use `createBase58check` instead.\r\n * @deprecated\r\n */\r\nexport const base58check: (sha256: (data: Uint8Array) => Uint8Array) => BytesCoder =\r\n  createBase58check;\r\n\r\n// Bech32 code\r\n// -----------\r\nexport interface Bech32Decoded<Prefix extends string = string> {\r\n  prefix: Prefix;\r\n  words: number[];\r\n}\r\nexport interface Bech32DecodedWithArray<Prefix extends string = string> {\r\n  prefix: Prefix;\r\n  words: number[];\r\n  bytes: Uint8Array;\r\n}\r\n\r\nconst BECH_ALPHABET: Coder<number[], string> = chain(\r\n  alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'),\r\n  join('')\r\n);\r\n\r\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\r\nfunction bech32Polymod(pre: number): number {\r\n  const b = pre >> 25;\r\n  let chk = (pre & 0x1ffffff) << 5;\r\n  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\r\n    if (((b >> i) & 1) === 1) chk ^= POLYMOD_GENERATORS[i]!;\r\n  }\r\n  return chk;\r\n}\r\n\r\nfunction bechChecksum(prefix: string, words: number[], encodingConst = 1): string {\r\n  const len = prefix.length;\r\n  let chk = 1;\r\n  for (let i = 0; i < len; i++) {\r\n    const c = prefix.charCodeAt(i);\r\n    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);\r\n    chk = bech32Polymod(chk) ^ (c >> 5);\r\n  }\r\n  chk = bech32Polymod(chk);\r\n  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\r\n  for (let v of words) chk = bech32Polymod(chk) ^ v;\r\n  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);\r\n  chk ^= encodingConst;\r\n  return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]!], 30, 5, false));\r\n}\r\n\r\nexport interface Bech32 {\r\n  encode<Prefix extends string>(\r\n    prefix: Prefix,\r\n    words: number[] | Uint8Array,\r\n    limit?: number | false\r\n  ): `${Lowercase<Prefix>}1${string}`;\r\n  decode<Prefix extends string>(\r\n    str: `${Prefix}1${string}`,\r\n    limit?: number | false\r\n  ): Bech32Decoded<Prefix>;\r\n  encodeFromBytes(prefix: string, bytes: Uint8Array): string;\r\n  decodeToBytes(str: string): Bech32DecodedWithArray;\r\n  decodeUnsafe(str: string, limit?: number | false): void | Bech32Decoded<string>;\r\n  fromWords(to: number[]): Uint8Array;\r\n  fromWordsUnsafe(to: number[]): void | Uint8Array;\r\n  toWords(from: Uint8Array): number[];\r\n}\r\n/**\r\n * @__NO_SIDE_EFFECTS__\r\n */\r\nfunction genBech32(encoding: 'bech32' | 'bech32m'): Bech32 {\r\n  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\r\n  const _words = radix2(5);\r\n  const fromWords = _words.decode;\r\n  const toWords = _words.encode;\r\n  const fromWordsUnsafe = unsafeWrapper(fromWords);\r\n\r\n  function encode<Prefix extends string>(\r\n    prefix: Prefix,\r\n    words: number[] | Uint8Array,\r\n    limit: number | false = 90\r\n  ): `${Lowercase<Prefix>}1${string}` {\r\n    astr('bech32.encode prefix', prefix);\r\n    if (isBytes(words)) words = Array.from(words);\r\n    anumArr('bech32.encode', words);\r\n    const plen = prefix.length;\r\n    if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);\r\n    const actualLength = plen + 7 + words.length;\r\n    if (limit !== false && actualLength > limit)\r\n      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\r\n    const lowered = prefix.toLowerCase();\r\n    const sum = bechChecksum(lowered, words, ENCODING_CONST);\r\n    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}` as `${Lowercase<Prefix>}1${string}`;\r\n  }\r\n\r\n  function decode<Prefix extends string>(\r\n    str: `${Prefix}1${string}`,\r\n    limit?: number | false\r\n  ): Bech32Decoded<Prefix>;\r\n  function decode(str: string, limit?: number | false): Bech32Decoded;\r\n  function decode(str: string, limit: number | false = 90): Bech32Decoded {\r\n    astr('bech32.decode input', str);\r\n    const slen = str.length;\r\n    if (slen < 8 || (limit !== false && slen > limit))\r\n      throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\r\n    // don't allow mixed case\r\n    const lowered = str.toLowerCase();\r\n    if (str !== lowered && str !== str.toUpperCase())\r\n      throw new Error(`String must be lowercase or uppercase`);\r\n    const sepIndex = lowered.lastIndexOf('1');\r\n    if (sepIndex === 0 || sepIndex === -1)\r\n      throw new Error(`Letter \"1\" must be present between prefix and data only`);\r\n    const prefix = lowered.slice(0, sepIndex);\r\n    const data = lowered.slice(sepIndex + 1);\r\n    if (data.length < 6) throw new Error('Data must be at least 6 characters long');\r\n    const words = BECH_ALPHABET.decode(data).slice(0, -6);\r\n    const sum = bechChecksum(prefix, words, ENCODING_CONST);\r\n    if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\r\n    return { prefix, words };\r\n  }\r\n\r\n  const decodeUnsafe = unsafeWrapper(decode);\r\n\r\n  function decodeToBytes(str: string): Bech32DecodedWithArray {\r\n    const { prefix, words } = decode(str, false);\r\n    return { prefix, words, bytes: fromWords(words) };\r\n  }\r\n\r\n  function encodeFromBytes(prefix: string, bytes: Uint8Array) {\r\n    return encode(prefix, toWords(bytes));\r\n  }\r\n\r\n  return {\r\n    encode,\r\n    decode,\r\n    encodeFromBytes,\r\n    decodeToBytes,\r\n    decodeUnsafe,\r\n    fromWords,\r\n    fromWordsUnsafe,\r\n    toWords,\r\n  };\r\n}\r\n\r\n/**\r\n * bech32 from BIP 173. Operates on words.\r\n * For high-level, check out scure-btc-signer:\r\n * https://github.com/paulmillr/scure-btc-signer.\r\n */\r\nexport const bech32: Bech32 = genBech32('bech32');\r\n\r\n/**\r\n * bech32m from BIP 350. Operates on words.\r\n * It was to mitigate `bech32` weaknesses.\r\n * For high-level, check out scure-btc-signer:\r\n * https://github.com/paulmillr/scure-btc-signer.\r\n */\r\nexport const bech32m: Bech32 = genBech32('bech32m');\r\n\r\ndeclare const TextEncoder: any;\r\ndeclare const TextDecoder: any;\r\n\r\n/**\r\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\r\n * @example\r\n * ```js\r\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\r\n * const str = utf8.encode(b); // \"hey\"\r\n * ```\r\n */\r\nexport const utf8: BytesCoder = {\r\n  encode: (data) => new TextDecoder().decode(data),\r\n  decode: (str) => new TextEncoder().encode(str),\r\n};\r\n\r\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\r\n// prettier-ignore\r\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\r\n  typeof (Uint8Array as any).from([]).toHex === 'function' &&\r\n  typeof (Uint8Array as any).fromHex === 'function')();\r\n// prettier-ignore\r\nconst hexBuiltin: BytesCoder = {\r\n  encode(data) { abytes(data); return (data as any).toHex(); },\r\n  decode(s) { astr('hex', s); return (Uint8Array as any).fromHex(s); },\r\n};\r\n/**\r\n * hex string decoder. Uses built-in function, when available.\r\n * @example\r\n * ```js\r\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\r\n * const str = hex.encode(b); // \"0102ff\"\r\n * ```\r\n */\r\nexport const hex: BytesCoder = hasHexBuiltin\r\n  ? hexBuiltin\r\n  : chain(\r\n      radix2(4),\r\n      alphabet('0123456789abcdef'),\r\n      join(''),\r\n      normalize((s: string) => {\r\n        if (typeof s !== 'string' || s.length % 2 !== 0)\r\n          throw new TypeError(\r\n            `hex.decode: expected string, got ${typeof s} with length ${s.length}`\r\n          );\r\n        return s.toLowerCase();\r\n      })\r\n    );\r\n\r\nexport type SomeCoders = {\r\n  utf8: BytesCoder;\r\n  hex: BytesCoder;\r\n  base16: BytesCoder;\r\n  base32: BytesCoder;\r\n  base64: BytesCoder;\r\n  base64url: BytesCoder;\r\n  base58: BytesCoder;\r\n  base58xmr: BytesCoder;\r\n};\r\n// prettier-ignore\r\nconst CODERS: SomeCoders = {\r\n  utf8, hex, base16, base32, base64, base64url, base58, base58xmr\r\n};\r\ntype CoderType = keyof SomeCoders;\r\nconst coderTypeError =\r\n  'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\r\n\r\n/** @deprecated */\r\nexport const bytesToString = (type: CoderType, bytes: Uint8Array): string => {\r\n  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\r\n  if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');\r\n  return CODERS[type].encode(bytes);\r\n};\r\n\r\n/** @deprecated */\r\nexport const str: (type: CoderType, bytes: Uint8Array) => string = bytesToString; // as in python, but for bytes only\r\n\r\n/** @deprecated */\r\nexport const stringToBytes = (type: CoderType, str: string): Uint8Array => {\r\n  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\r\n  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');\r\n  return CODERS[type].decode(str);\r\n};\r\n/** @deprecated */\r\nexport const bytes: (type: CoderType, str: string) => Uint8Array = stringToBytes;\r\n", "/**\r\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\r\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\r\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\r\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\r\n * @module\r\n */\r\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\r\nimport * as u64 from './_u64.ts';\r\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\r\n\r\n/**\r\n * Round constants:\r\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\r\n */\r\n// prettier-ignore\r\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\r\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n]);\r\n\r\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\r\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\r\nexport class SHA256 extends HashMD<SHA256> {\r\n  // We cannot use array here since array allows indexing by variable\r\n  // which means optimizer/compiler cannot use registers.\r\n  protected A: number = SHA256_IV[0] | 0;\r\n  protected B: number = SHA256_IV[1] | 0;\r\n  protected C: number = SHA256_IV[2] | 0;\r\n  protected D: number = SHA256_IV[3] | 0;\r\n  protected E: number = SHA256_IV[4] | 0;\r\n  protected F: number = SHA256_IV[5] | 0;\r\n  protected G: number = SHA256_IV[6] | 0;\r\n  protected H: number = SHA256_IV[7] | 0;\r\n\r\n  constructor(outputLen: number = 32) {\r\n    super(64, outputLen, 8, false);\r\n  }\r\n  protected get(): [number, number, number, number, number, number, number, number] {\r\n    const { A, B, C, D, E, F, G, H } = this;\r\n    return [A, B, C, D, E, F, G, H];\r\n  }\r\n  // prettier-ignore\r\n  protected set(\r\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\r\n  ): void {\r\n    this.A = A | 0;\r\n    this.B = B | 0;\r\n    this.C = C | 0;\r\n    this.D = D | 0;\r\n    this.E = E | 0;\r\n    this.F = F | 0;\r\n    this.G = G | 0;\r\n    this.H = H | 0;\r\n  }\r\n  protected process(view: DataView, offset: number): void {\r\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\r\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\r\n    for (let i = 16; i < 64; i++) {\r\n      const W15 = SHA256_W[i - 15];\r\n      const W2 = SHA256_W[i - 2];\r\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\r\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\r\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\r\n    }\r\n    // Compression function main loop, 64 rounds\r\n    let { A, B, C, D, E, F, G, H } = this;\r\n    for (let i = 0; i < 64; i++) {\r\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\r\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\r\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\r\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\r\n      H = G;\r\n      G = F;\r\n      F = E;\r\n      E = (D + T1) | 0;\r\n      D = C;\r\n      C = B;\r\n      B = A;\r\n      A = (T1 + T2) | 0;\r\n    }\r\n    // Add the compressed chunk to the current hash value\r\n    A = (A + this.A) | 0;\r\n    B = (B + this.B) | 0;\r\n    C = (C + this.C) | 0;\r\n    D = (D + this.D) | 0;\r\n    E = (E + this.E) | 0;\r\n    F = (F + this.F) | 0;\r\n    G = (G + this.G) | 0;\r\n    H = (H + this.H) | 0;\r\n    this.set(A, B, C, D, E, F, G, H);\r\n  }\r\n  protected roundClean(): void {\r\n    clean(SHA256_W);\r\n  }\r\n  destroy(): void {\r\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\r\n    clean(this.buffer);\r\n  }\r\n}\r\n\r\nexport class SHA224 extends SHA256 {\r\n  protected A: number = SHA224_IV[0] | 0;\r\n  protected B: number = SHA224_IV[1] | 0;\r\n  protected C: number = SHA224_IV[2] | 0;\r\n  protected D: number = SHA224_IV[3] | 0;\r\n  protected E: number = SHA224_IV[4] | 0;\r\n  protected F: number = SHA224_IV[5] | 0;\r\n  protected G: number = SHA224_IV[6] | 0;\r\n  protected H: number = SHA224_IV[7] | 0;\r\n  constructor() {\r\n    super(28);\r\n  }\r\n}\r\n\r\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\r\n\r\n// Round contants\r\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\r\n// prettier-ignore\r\nconst K512 = /* @__PURE__ */ (() => u64.split([\r\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\r\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\r\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\r\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\r\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\r\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\r\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\r\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\r\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\r\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\r\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\r\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\r\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\r\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\r\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\r\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\r\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\r\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\r\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\r\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\r\n].map(n => BigInt(n))))();\r\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\r\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\r\n\r\n// Reusable temporary buffers\r\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\r\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\r\n\r\nexport class SHA512 extends HashMD<SHA512> {\r\n  // We cannot use array here since array allows indexing by variable\r\n  // which means optimizer/compiler cannot use registers.\r\n  // h -- high 32 bits, l -- low 32 bits\r\n  protected Ah: number = SHA512_IV[0] | 0;\r\n  protected Al: number = SHA512_IV[1] | 0;\r\n  protected Bh: number = SHA512_IV[2] | 0;\r\n  protected Bl: number = SHA512_IV[3] | 0;\r\n  protected Ch: number = SHA512_IV[4] | 0;\r\n  protected Cl: number = SHA512_IV[5] | 0;\r\n  protected Dh: number = SHA512_IV[6] | 0;\r\n  protected Dl: number = SHA512_IV[7] | 0;\r\n  protected Eh: number = SHA512_IV[8] | 0;\r\n  protected El: number = SHA512_IV[9] | 0;\r\n  protected Fh: number = SHA512_IV[10] | 0;\r\n  protected Fl: number = SHA512_IV[11] | 0;\r\n  protected Gh: number = SHA512_IV[12] | 0;\r\n  protected Gl: number = SHA512_IV[13] | 0;\r\n  protected Hh: number = SHA512_IV[14] | 0;\r\n  protected Hl: number = SHA512_IV[15] | 0;\r\n\r\n  constructor(outputLen: number = 64) {\r\n    super(128, outputLen, 16, false);\r\n  }\r\n  // prettier-ignore\r\n  protected get(): [\r\n    number, number, number, number, number, number, number, number,\r\n    number, number, number, number, number, number, number, number\r\n  ] {\r\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\r\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\r\n  }\r\n  // prettier-ignore\r\n  protected set(\r\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\r\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\r\n  ): void {\r\n    this.Ah = Ah | 0;\r\n    this.Al = Al | 0;\r\n    this.Bh = Bh | 0;\r\n    this.Bl = Bl | 0;\r\n    this.Ch = Ch | 0;\r\n    this.Cl = Cl | 0;\r\n    this.Dh = Dh | 0;\r\n    this.Dl = Dl | 0;\r\n    this.Eh = Eh | 0;\r\n    this.El = El | 0;\r\n    this.Fh = Fh | 0;\r\n    this.Fl = Fl | 0;\r\n    this.Gh = Gh | 0;\r\n    this.Gl = Gl | 0;\r\n    this.Hh = Hh | 0;\r\n    this.Hl = Hl | 0;\r\n  }\r\n  protected process(view: DataView, offset: number): void {\r\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\r\n    for (let i = 0; i < 16; i++, offset += 4) {\r\n      SHA512_W_H[i] = view.getUint32(offset);\r\n      SHA512_W_L[i] = view.getUint32((offset += 4));\r\n    }\r\n    for (let i = 16; i < 80; i++) {\r\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\r\n      const W15h = SHA512_W_H[i - 15] | 0;\r\n      const W15l = SHA512_W_L[i - 15] | 0;\r\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\r\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\r\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\r\n      const W2h = SHA512_W_H[i - 2] | 0;\r\n      const W2l = SHA512_W_L[i - 2] | 0;\r\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\r\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\r\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\r\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\r\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\r\n      SHA512_W_H[i] = SUMh | 0;\r\n      SHA512_W_L[i] = SUMl | 0;\r\n    }\r\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\r\n    // Compression function main loop, 80 rounds\r\n    for (let i = 0; i < 80; i++) {\r\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\r\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\r\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\r\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\r\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\r\n      const CHIl = (El & Fl) ^ (~El & Gl);\r\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\r\n      // prettier-ignore\r\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\r\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\r\n      const T1l = T1ll | 0;\r\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\r\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\r\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\r\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\r\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\r\n      Hh = Gh | 0;\r\n      Hl = Gl | 0;\r\n      Gh = Fh | 0;\r\n      Gl = Fl | 0;\r\n      Fh = Eh | 0;\r\n      Fl = El | 0;\r\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\r\n      Dh = Ch | 0;\r\n      Dl = Cl | 0;\r\n      Ch = Bh | 0;\r\n      Cl = Bl | 0;\r\n      Bh = Ah | 0;\r\n      Bl = Al | 0;\r\n      const All = u64.add3L(T1l, sigma0l, MAJl);\r\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\r\n      Al = All | 0;\r\n    }\r\n    // Add the compressed chunk to the current hash value\r\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\r\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\r\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\r\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\r\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\r\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\r\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\r\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\r\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\r\n  }\r\n  protected roundClean(): void {\r\n    clean(SHA512_W_H, SHA512_W_L);\r\n  }\r\n  destroy(): void {\r\n    clean(this.buffer);\r\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n  }\r\n}\r\n\r\nexport class SHA384 extends SHA512 {\r\n  protected Ah: number = SHA384_IV[0] | 0;\r\n  protected Al: number = SHA384_IV[1] | 0;\r\n  protected Bh: number = SHA384_IV[2] | 0;\r\n  protected Bl: number = SHA384_IV[3] | 0;\r\n  protected Ch: number = SHA384_IV[4] | 0;\r\n  protected Cl: number = SHA384_IV[5] | 0;\r\n  protected Dh: number = SHA384_IV[6] | 0;\r\n  protected Dl: number = SHA384_IV[7] | 0;\r\n  protected Eh: number = SHA384_IV[8] | 0;\r\n  protected El: number = SHA384_IV[9] | 0;\r\n  protected Fh: number = SHA384_IV[10] | 0;\r\n  protected Fl: number = SHA384_IV[11] | 0;\r\n  protected Gh: number = SHA384_IV[12] | 0;\r\n  protected Gl: number = SHA384_IV[13] | 0;\r\n  protected Hh: number = SHA384_IV[14] | 0;\r\n  protected Hl: number = SHA384_IV[15] | 0;\r\n\r\n  constructor() {\r\n    super(48);\r\n  }\r\n}\r\n\r\n/**\r\n * Truncated SHA512/256 and SHA512/224.\r\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\r\n * Then t hashes string to produce result IV.\r\n * See `test/misc/sha2-gen-iv.js`.\r\n */\r\n\r\n/** SHA512/224 IV */\r\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\r\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\r\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\r\n]);\r\n\r\n/** SHA512/256 IV */\r\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\r\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\r\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\r\n]);\r\n\r\nexport class SHA512_224 extends SHA512 {\r\n  protected Ah: number = T224_IV[0] | 0;\r\n  protected Al: number = T224_IV[1] | 0;\r\n  protected Bh: number = T224_IV[2] | 0;\r\n  protected Bl: number = T224_IV[3] | 0;\r\n  protected Ch: number = T224_IV[4] | 0;\r\n  protected Cl: number = T224_IV[5] | 0;\r\n  protected Dh: number = T224_IV[6] | 0;\r\n  protected Dl: number = T224_IV[7] | 0;\r\n  protected Eh: number = T224_IV[8] | 0;\r\n  protected El: number = T224_IV[9] | 0;\r\n  protected Fh: number = T224_IV[10] | 0;\r\n  protected Fl: number = T224_IV[11] | 0;\r\n  protected Gh: number = T224_IV[12] | 0;\r\n  protected Gl: number = T224_IV[13] | 0;\r\n  protected Hh: number = T224_IV[14] | 0;\r\n  protected Hl: number = T224_IV[15] | 0;\r\n\r\n  constructor() {\r\n    super(28);\r\n  }\r\n}\r\n\r\nexport class SHA512_256 extends SHA512 {\r\n  protected Ah: number = T256_IV[0] | 0;\r\n  protected Al: number = T256_IV[1] | 0;\r\n  protected Bh: number = T256_IV[2] | 0;\r\n  protected Bl: number = T256_IV[3] | 0;\r\n  protected Ch: number = T256_IV[4] | 0;\r\n  protected Cl: number = T256_IV[5] | 0;\r\n  protected Dh: number = T256_IV[6] | 0;\r\n  protected Dl: number = T256_IV[7] | 0;\r\n  protected Eh: number = T256_IV[8] | 0;\r\n  protected El: number = T256_IV[9] | 0;\r\n  protected Fh: number = T256_IV[10] | 0;\r\n  protected Fl: number = T256_IV[11] | 0;\r\n  protected Gh: number = T256_IV[12] | 0;\r\n  protected Gl: number = T256_IV[13] | 0;\r\n  protected Hh: number = T256_IV[14] | 0;\r\n  protected Hl: number = T256_IV[15] | 0;\r\n\r\n  constructor() {\r\n    super(32);\r\n  }\r\n}\r\n\r\n/**\r\n * SHA2-256 hash function from RFC 4634.\r\n *\r\n * It is the fastest JS hash, even faster than Blake3.\r\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\r\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\r\n */\r\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\r\n/** SHA2-224 hash function from RFC 4634 */\r\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\r\n\r\n/** SHA2-512 hash function from RFC 4634. */\r\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\r\n/** SHA2-384 hash function from RFC 4634. */\r\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\r\n\r\n/**\r\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\r\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\r\n */\r\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\r\n/**\r\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\r\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\r\n */\r\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\r\n", "/**\r\n * HMAC: RFC2104 message authentication code.\r\n * @module\r\n */\r\nimport { abytes, aexists, ahash, clean, Hash, toBytes, type CHash, type Input } from './utils.ts';\r\n\r\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\r\n  oHash: T;\r\n  iHash: T;\r\n  blockLen: number;\r\n  outputLen: number;\r\n  private finished = false;\r\n  private destroyed = false;\r\n\r\n  constructor(hash: CHash, _key: Input) {\r\n    super();\r\n    ahash(hash);\r\n    const key = toBytes(_key);\r\n    this.iHash = hash.create() as T;\r\n    if (typeof this.iHash.update !== 'function')\r\n      throw new Error('Expected instance of class which extends utils.Hash');\r\n    this.blockLen = this.iHash.blockLen;\r\n    this.outputLen = this.iHash.outputLen;\r\n    const blockLen = this.blockLen;\r\n    const pad = new Uint8Array(blockLen);\r\n    // blockLen can be bigger than outputLen\r\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\r\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\r\n    this.iHash.update(pad);\r\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\r\n    this.oHash = hash.create() as T;\r\n    // Undo internal XOR && apply outer XOR\r\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\r\n    this.oHash.update(pad);\r\n    clean(pad);\r\n  }\r\n  update(buf: Input): this {\r\n    aexists(this);\r\n    this.iHash.update(buf);\r\n    return this;\r\n  }\r\n  digestInto(out: Uint8Array): void {\r\n    aexists(this);\r\n    abytes(out, this.outputLen);\r\n    this.finished = true;\r\n    this.iHash.digestInto(out);\r\n    this.oHash.update(out);\r\n    this.oHash.digestInto(out);\r\n    this.destroy();\r\n  }\r\n  digest(): Uint8Array {\r\n    const out = new Uint8Array(this.oHash.outputLen);\r\n    this.digestInto(out);\r\n    return out;\r\n  }\r\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\r\n    // Create new instance without calling constructor since key already in state and we don't know it.\r\n    to ||= Object.create(Object.getPrototypeOf(this), {});\r\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\r\n    to = to as this;\r\n    to.finished = finished;\r\n    to.destroyed = destroyed;\r\n    to.blockLen = blockLen;\r\n    to.outputLen = outputLen;\r\n    to.oHash = oHash._cloneInto(to.oHash);\r\n    to.iHash = iHash._cloneInto(to.iHash);\r\n    return to;\r\n  }\r\n  clone(): HMAC<T> {\r\n    return this._cloneInto();\r\n  }\r\n  destroy(): void {\r\n    this.destroyed = true;\r\n    this.oHash.destroy();\r\n    this.iHash.destroy();\r\n  }\r\n}\r\n\r\n/**\r\n * HMAC: RFC2104 message authentication code.\r\n * @param hash - function that would be used e.g. sha256\r\n * @param key - message key\r\n * @param message - message data\r\n * @example\r\n * import { hmac } from '@noble/hashes/hmac';\r\n * import { sha256 } from '@noble/hashes/sha2';\r\n * const mac1 = hmac(sha256, 'key', 'message');\r\n */\r\nexport const hmac: {\r\n  (hash: CHash, key: Input, message: Input): Uint8Array;\r\n  create(hash: CHash, key: Input): HMAC<any>;\r\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\r\n  new HMAC<any>(hash, key).update(message).digest();\r\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\r\n", "/**\r\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\r\n * @module\r\n */\r\nimport { hmac } from './hmac.ts';\r\n// prettier-ignore\r\nimport {\r\n  ahash, anumber,\r\n  asyncLoop, checkOpts, clean, createView, Hash, kdfInputToBytes,\r\n  type CHash,\r\n  type KDFInput\r\n} from './utils.ts';\r\n\r\nexport type Pbkdf2Opt = {\r\n  c: number; // Iterations\r\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\r\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\r\n};\r\n// Common prologue and epilogue for sync/async functions\r\nfunction pbkdf2Init(hash: CHash, _password: KDFInput, _salt: KDFInput, _opts: Pbkdf2Opt) {\r\n  ahash(hash);\r\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\r\n  const { c, dkLen, asyncTick } = opts;\r\n  anumber(c);\r\n  anumber(dkLen);\r\n  anumber(asyncTick);\r\n  if (c < 1) throw new Error('iterations (c) should be >= 1');\r\n  const password = kdfInputToBytes(_password);\r\n  const salt = kdfInputToBytes(_salt);\r\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\r\n  const DK = new Uint8Array(dkLen);\r\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n  const PRF = hmac.create(hash, password);\r\n  const PRFSalt = PRF._cloneInto().update(salt);\r\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\r\n}\r\n\r\nfunction pbkdf2Output<T extends Hash<T>>(\r\n  PRF: Hash<T>,\r\n  PRFSalt: Hash<T>,\r\n  DK: Uint8Array,\r\n  prfW: Hash<T>,\r\n  u: Uint8Array\r\n) {\r\n  PRF.destroy();\r\n  PRFSalt.destroy();\r\n  if (prfW) prfW.destroy();\r\n  clean(u);\r\n  return DK;\r\n}\r\n\r\n/**\r\n * PBKDF2-HMAC: RFC 2898 key derivation function\r\n * @param hash - hash function that would be used e.g. sha256\r\n * @param password - password from which a derived key is generated\r\n * @param salt - cryptographic salt\r\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\r\n * @example\r\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: Math.pow(2, 18) });\r\n */\r\nexport function pbkdf2(\r\n  hash: CHash,\r\n  password: KDFInput,\r\n  salt: KDFInput,\r\n  opts: Pbkdf2Opt\r\n): Uint8Array {\r\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\r\n  let prfW: any; // Working copy\r\n  const arr = new Uint8Array(4);\r\n  const view = createView(arr);\r\n  const u = new Uint8Array(PRF.outputLen);\r\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\r\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\r\n    // Ti = F(Password, Salt, c, i)\r\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\r\n    view.setInt32(0, ti, false);\r\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\r\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\r\n    Ti.set(u.subarray(0, Ti.length));\r\n    for (let ui = 1; ui < c; ui++) {\r\n      // Uc = PRF(Password, Uc−1)\r\n      PRF._cloneInto(prfW).update(u).digestInto(u);\r\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\r\n    }\r\n  }\r\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\r\n}\r\n\r\n/**\r\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\r\n * @example\r\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\r\n */\r\nexport async function pbkdf2Async(\r\n  hash: CHash,\r\n  password: KDFInput,\r\n  salt: KDFInput,\r\n  opts: Pbkdf2Opt\r\n): Promise<Uint8Array> {\r\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\r\n  let prfW: any; // Working copy\r\n  const arr = new Uint8Array(4);\r\n  const view = createView(arr);\r\n  const u = new Uint8Array(PRF.outputLen);\r\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\r\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\r\n    // Ti = F(Password, Salt, c, i)\r\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\r\n    view.setInt32(0, ti, false);\r\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\r\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\r\n    Ti.set(u.subarray(0, Ti.length));\r\n    await asyncLoop(c - 1, asyncTick, () => {\r\n      // Uc = PRF(Password, Uc−1)\r\n      PRF._cloneInto(prfW).update(u).digestInto(u);\r\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\r\n    });\r\n  }\r\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\r\n}\r\n", "/**\r\n * Audited & minimal JS implementation of\r\n * [BIP39 mnemonic phrases](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\r\n * @module\r\n * @example\r\n```js\r\nimport * as bip39 from '@scure/bip39';\r\nimport { wordlist } from '@scure/bip39/wordlists/english';\r\nconst mn = bip39.generateMnemonic(wordlist);\r\nconsole.log(mn);\r\nconst ent = bip39.mnemonicToEntropy(mn, wordlist)\r\nbip39.entropyToMnemonic(ent, wordlist);\r\nbip39.validateMnemonic(mn, wordlist);\r\nawait bip39.mnemonicToSeed(mn, 'password');\r\nbip39.mnemonicToSeedSync(mn, 'password');\r\n\r\n// Wordlists\r\nimport { wordlist as czech } from '@scure/bip39/wordlists/czech';\r\nimport { wordlist as english } from '@scure/bip39/wordlists/english';\r\nimport { wordlist as french } from '@scure/bip39/wordlists/french';\r\nimport { wordlist as italian } from '@scure/bip39/wordlists/italian';\r\nimport { wordlist as japanese } from '@scure/bip39/wordlists/japanese';\r\nimport { wordlist as korean } from '@scure/bip39/wordlists/korean';\r\nimport { wordlist as portuguese } from '@scure/bip39/wordlists/portuguese';\r\nimport { wordlist as simplifiedChinese } from '@scure/bip39/wordlists/simplified-chinese';\r\nimport { wordlist as spanish } from '@scure/bip39/wordlists/spanish';\r\nimport { wordlist as traditionalChinese } from '@scure/bip39/wordlists/traditional-chinese';\r\n```\r\n */\r\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\r\nimport { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';\r\nimport { sha256, sha512 } from '@noble/hashes/sha2';\r\nimport { abytes, anumber, randomBytes } from '@noble/hashes/utils';\r\nimport { utils as baseUtils } from '@scure/base';\r\n// Japanese wordlist\r\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\r\n// Normalization replaces equivalent sequences of characters\r\n// so that any two texts that are equivalent will be reduced\r\n// to the same sequence of code points, called the normal form of the original text.\r\n// https://tonsky.me/blog/unicode/#why-is-a----\r\nfunction nfkd(str) {\r\n    if (typeof str !== 'string')\r\n        throw new TypeError('invalid mnemonic type: ' + typeof str);\r\n    return str.normalize('NFKD');\r\n}\r\nfunction normalize(str) {\r\n    const norm = nfkd(str);\r\n    const words = norm.split(' ');\r\n    if (![12, 15, 18, 21, 24].includes(words.length))\r\n        throw new Error('Invalid mnemonic');\r\n    return { nfkd: norm, words };\r\n}\r\nfunction aentropy(ent) {\r\n    abytes(ent, 16, 20, 24, 28, 32);\r\n}\r\n/**\r\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\r\n * @param wordlist imported wordlist for specific language\r\n * @param strength mnemonic strength 128-256 bits\r\n * @example\r\n * generateMnemonic(wordlist, 128)\r\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\r\n */\r\nexport function generateMnemonic(wordlist, strength = 128) {\r\n    anumber(strength);\r\n    if (strength % 32 !== 0 || strength > 256)\r\n        throw new TypeError('Invalid entropy');\r\n    return entropyToMnemonic(randomBytes(strength / 8), wordlist);\r\n}\r\nconst calcChecksum = (entropy) => {\r\n    // Checksum is ent.length/4 bits long\r\n    const bitsLeft = 8 - entropy.length / 4;\r\n    // Zero rightmost \"bitsLeft\" bits in byte\r\n    // For example: bitsLeft=4 val=10111101 -> 10110000\r\n    return new Uint8Array([(sha256(entropy)[0] >> bitsLeft) << bitsLeft]);\r\n};\r\nfunction getCoder(wordlist) {\r\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\r\n        throw new Error('Wordlist: expected array of 2048 strings');\r\n    wordlist.forEach((i) => {\r\n        if (typeof i !== 'string')\r\n            throw new Error('wordlist: non-string element: ' + i);\r\n    });\r\n    return baseUtils.chain(baseUtils.checksum(1, calcChecksum), baseUtils.radix2(11, true), baseUtils.alphabet(wordlist));\r\n}\r\n/**\r\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\r\n * @param mnemonic 12-24 words\r\n * @param wordlist imported wordlist for specific language\r\n * @example\r\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\r\n * mnemonicToEntropy(mnem, wordlist)\r\n * // Produces\r\n * new Uint8Array([\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\r\n * ])\r\n */\r\nexport function mnemonicToEntropy(mnemonic, wordlist) {\r\n    const { words } = normalize(mnemonic);\r\n    const entropy = getCoder(wordlist).decode(words);\r\n    aentropy(entropy);\r\n    return entropy;\r\n}\r\n/**\r\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\r\n * @param entropy byte array\r\n * @param wordlist imported wordlist for specific language\r\n * @returns 12-24 words\r\n * @example\r\n * const ent = new Uint8Array([\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\r\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\r\n * ]);\r\n * entropyToMnemonic(ent, wordlist);\r\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\r\n */\r\nexport function entropyToMnemonic(entropy, wordlist) {\r\n    aentropy(entropy);\r\n    const words = getCoder(wordlist).encode(entropy);\r\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\r\n}\r\n/**\r\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\r\n */\r\nexport function validateMnemonic(mnemonic, wordlist) {\r\n    try {\r\n        mnemonicToEntropy(mnemonic, wordlist);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nconst psalt = (passphrase) => nfkd('mnemonic' + passphrase);\r\n/**\r\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\r\n * @param mnemonic 12-24 words\r\n * @param passphrase string that will additionally protect the key\r\n * @returns 64 bytes of key data\r\n * @example\r\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\r\n * await mnemonicToSeed(mnem, 'password');\r\n * // new Uint8Array([...64 bytes])\r\n */\r\nexport function mnemonicToSeed(mnemonic, passphrase = '') {\r\n    return pbkdf2Async(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });\r\n}\r\n/**\r\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\r\n * @param mnemonic 12-24 words\r\n * @param passphrase string that will additionally protect the key\r\n * @returns 64 bytes of key data\r\n * @example\r\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\r\n * mnemonicToSeedSync(mnem, 'password');\r\n * // new Uint8Array([...64 bytes])\r\n */\r\nexport function mnemonicToSeedSync(mnemonic, passphrase = '') {\r\n    return pbkdf2(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });\r\n}\r\n", "/**\r\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\r\n *\r\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\r\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\r\n * @module\r\n * @deprecated\r\n */\r\nimport {\r\n  SHA384 as SHA384n,\r\n  sha384 as sha384n,\r\n  sha512_224 as sha512_224n,\r\n  SHA512_224 as SHA512_224n,\r\n  sha512_256 as sha512_256n,\r\n  SHA512_256 as SHA512_256n,\r\n  SHA512 as SHA512n,\r\n  sha512 as sha512n,\r\n} from './sha2.ts';\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA512: typeof SHA512n = SHA512n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha512: typeof sha512n = sha512n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA384: typeof SHA384n = SHA384n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha384: typeof sha384n = sha384n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA512_224: typeof SHA512_224n = SHA512_224n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha512_224: typeof sha512_224n = sha512_224n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const SHA512_256: typeof SHA512_256n = SHA512_256n;\r\n/** @deprecated Use import from `noble/hashes/sha2` module */\r\nexport const sha512_256: typeof sha512_256n = sha512_256n;\r\n"],
  "mappings": "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",
  "names": ["wallets", "_a", "__classPrivateFieldGet", "__classPrivateFieldSet", "abytes", "anumber", "padding", "abytes", "abytes", "normalize", "normalize", "sha512"]
}
